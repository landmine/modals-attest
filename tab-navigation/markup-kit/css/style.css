/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */*,:after,:before{-webkit-box-sizing:inherit;box-sizing:inherit}html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;font-family:sans-serif;line-height:1.15}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{-webkit-text-decoration-skip:objects;background-color:transparent}a:active,a:hover{outline-width:0}abbr[title]{-webkit-text-decoration:underline dotted;border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:Open Sans,Calibri,Tahoma,sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}.pe-base-fontsize{font-size:.875rem}.pe-fontstack{font-family:Open Sans,Calibri,Tahoma,sans-serif}.pe-copy{color:#252525;font-size:1rem;line-height:1.57143rem}.pe-copy--secondary,.pe-label--secondary{color:#6a7070}.pe-copy--small{color:#252525;font-size:.85714rem;line-height:1.42857rem}.pe-copy--large,.pe-heading-level6,h6,header h5+.subtitle{color:#252525;font-size:1.14286rem;line-height:1.71429rem}.pe-paragraph,p{color:#252525;font-size:1rem;line-height:1.57143rem;margin-bottom:.85714rem;margin-top:0}.pe-paragraph--last{color:#252525;margin-bottom:0}.pe-lead{font-size:1.42857rem;line-height:2rem}.pe-lead,.pe-page-title{color:#252525;font-weight:lighter}.pe-page-title{font-size:2.71429rem;line-height:3.71429rem}.pe-heading-level1,.pe-page-title--small,h1{color:#252525;font-size:2rem;font-weight:lighter;line-height:2.71429rem}.pe-heading-level3,.pe-heading-level4,.pe-title,h3,h4,header h2+.subtitle,header h3+.subtitle{color:#252525;font-size:1.42857rem;font-weight:400;line-height:1.85714rem}.pe-heading-level5,.pe-title--small,h5,header h4+.subtitle{color:#252525;font-size:1.28571rem;font-weight:400;line-height:1.57143rem}.pe-heading-level2,.pe-title--large,h2,header h1+.subtitle{color:#252525;font-size:1.71429rem;font-weight:400;line-height:2rem}.pe-page-title--secondary,.pe-title--secondary{color:#6a7070}.pe-label{font-size:1rem;line-height:1.28571rem}.pe-label.pe-label--inverse{color:#fff}.pe-label--secondary.pe-label--inverse{color:#f5f5f5}.pe-label--small{font-size:.85714rem;line-height:1.14286rem}.pe-label--large{font-size:1.14286rem;line-height:1.42857rem}.pe-bold,.pe-label--bold{font-weight:600}.pe-list{margin:12px 0;padding-left:1.85714rem}.pe-list li{font-size:1rem;line-height:1.57143rem;margin-bottom:.42857rem}.pe-list li>ol,.pe-list li>ul{margin-top:.42857rem}.pe-list.pe-styled-lists--ordered{list-style-type:decimal}.pe-list.pe-styled-lists--ordered ol{list-style-type:lower-alpha;padding-left:1.85714rem}.pe-list.pe-styled-lists--ordered ol ol{list-style-type:lower-roman}.pe-list.pe-styled-lists--unordered{list-style-type:disc}.pe-list.pe-styled-lists--unordered ul{list-style-type:circle;padding-left:1.85714rem}.pe-list.pe-styled-lists--unordered ul ul{list-style-type:square}.pe-list.pe-styled-lists-heading--ordered{list-style-type:decimal;margin-top:0}.pe-list.pe-styled-lists-heading--ordered ol{list-style-type:lower-alpha;padding-left:1.85714rem}.pe-list.pe-styled-lists-heading--ordered ol ol{list-style-type:lower-roman}.pe-list.pe-styled-lists-heading--unordered{list-style-type:disc;margin-top:0}.pe-list.pe-styled-lists-heading--unordered ul{list-style-type:circle;padding-left:1.85714rem}.pe-list.pe-styled-lists-heading--unordered ul ul{list-style-type:square}.pe-list--unstyled{list-style:none;padding-left:0}.pe-list--unstyled ul{padding-left:1.85714rem}.pe-heading-level1,.pe-heading-level2,h1,h2,header h1+.subtitle{margin-bottom:6px}.pe-heading-level3,h3,header h2+.subtitle{font-weight:700;margin-bottom:6px}.pe-heading-level4,.pe-heading-level5,.pe-heading-level6,h4,h5,h6,header h3+.subtitle,header h4+.subtitle,header h5+.subtitle{margin-bottom:6px}*+[class^=pe-heading-level]{margin-top:20px}.pe-code{background:#005a70;color:#f5f5f5;font-size:1rem;line-height:1.42857rem;padding:30px 50px}.pe-code,.pe-code-inline,.pe-kbd{font-family:Monaco,Lucida Console,monospace}.pe-code-inline,.pe-kbd{background:#e9e9e9;padding:0 4px}html{font-size:.875rem}body{color:#252525;font-family:Open Sans,Calibri,Tahoma,sans-serif}h1,h2,h3,h4,h5,h6{margin-bottom:0;margin-top:0}*+h1,*+h2,*+h3,*+h4,*+h5,*+h6{margin-top:20px}h1+h2{margin-top:40px}h2+h3,h3+h4,h4+h5,h5+h6{margin-top:6px}header{margin-bottom:20px}header h1+.subtitle{margin-top:34px}aside h1{font-size:1.25rem}aside h2{font-size:1.1rem}aside h3{font-size:1rem}aside h4,aside h5,aside h6{font-size:.8rem}table{border-collapse:collapse;margin-bottom:35px;max-width:100%;width:100%}table td,table th{line-height:1.42857143;padding:8px;text-align:left;vertical-align:top}table thead th{border-top:0;vertical-align:bottom}a{color:#047a9c;text-decoration:underline}a.active,a:active,a:focus,a:hover{color:#005a70;text-decoration:none}a:focus{-webkit-box-shadow:none;box-shadow:none;outline:2px solid #0b73da;outline-offset:4px}abbr,abbr[title]{text-decoration:none}ins:after,ins:before{content:"+"}mark{background:#ffb81c}small{font-size:.85714rem;line-height:1.14286rem}sub,sup{font-size:90%}sub{top:.2rem}sup{top:-.2rem}pre{max-width:100%;overflow-x:auto}code,kbd,pre{font-family:Monaco,Lucida Console,monospace}:focus{-webkit-box-shadow:none;box-shadow:none;outline:2px solid #0b73da;outline-offset:4px}.tabbed-navigation{position:relative}.tabbed-navigation .tab-name{background:none;border:0}.tabbed-navigation ul.tabs{margin:0;padding:0}.tabbed-navigation ul.tabs>li{display:inline-block;list-style-type:none}.tabbed-navigation li.tab-title.active .tab-name{border-bottom:3px solid transparent;color:#252525}.tabbed-navigation li.tab-title:hover:not(.active) .tab-name,.tabbed-navigation li.tab-title:hover:not(li) .tab-name{border-bottom:3px solid #c7c7c7;color:#252525}.tabbed-navigation .tab-name{color:#6a7070;cursor:pointer;display:block;text-decoration:none}.tabbed-navigation .tab-name,.tabbed-navigation div{margin:.5em 1em;padding:.5em 0}.tabbed-navigation div button{color:#6a7070}.tabbed-navigation.dark{background-color:#005a70}.tabbed-navigation.dark .tab-name{color:#d9d9d9}.tabbed-navigation.dark li.tab-title.active .tab-name{color:#fff}.tabbed-navigation.dark li.tab-title:hover:not(.active) .tab-name{border-bottom:3px solid #d9d9d9;color:#fff}.tabbed-navigation.dark div button{color:#d9d9d9}.tabbed-navigation .tab-slider{background-color:#19a6a4;bottom:0;height:3px;margin:.5em 1em;padding:0;position:absolute}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9AcGVhcnNvbi1jb21wb25lbnRzL2VsZW1lbnRzLXNkay9zcmMvc3R5bGVzL2Jhc2UvX25vcm1hbGl6ZS5zY3NzIiwic3R5bGUuY3NzIiwiLi4vbm9kZV9tb2R1bGVzL0BwZWFyc29uLWNvbXBvbmVudHMvZWxlbWVudHMtc2RrL3NyYy9zdHlsZXMvZWxlbWVudHMvdHlwb2dyYXBoeS9fdHlwZS5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL0BwZWFyc29uLWNvbXBvbmVudHMvZWxlbWVudHMtc2RrL3NyYy9zdHlsZXMvYmFzZS9fZnVuY3Rpb25zLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvQHBlYXJzb24tY29tcG9uZW50cy9lbGVtZW50cy1zZGsvc3JjL3N0eWxlcy9iYXNlL192YXJpYWJsZXMuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9AcGVhcnNvbi1jb21wb25lbnRzL2VsZW1lbnRzLXNkay9zcmMvc3R5bGVzL2Jhc2UvX21peGlucy5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL0BwZWFyc29uLWNvbXBvbmVudHMvZWxlbWVudHMtc2RrL3NyYy9zdHlsZXMvZWxlbWVudHMvY29sb3IvX3ZhcmlhYmxlcy5zY3NzIiwiLi4vbm9kZV9tb2R1bGVzL0BwZWFyc29uLWNvbXBvbmVudHMvZWxlbWVudHMtc2RrL3NyYy9zdHlsZXMvZWxlbWVudHMvdHlwb2dyYXBoeS9fdmFyaWFibGVzLnNjc3MiLCIuLi9ub2RlX21vZHVsZXMvQHBlYXJzb24tY29tcG9uZW50cy9lbGVtZW50cy1zZGsvc3JjL3N0eWxlcy9iYXNlL19odG1sLXRhZ3Muc2NzcyIsIl90YWJzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEVBQTRFLEFBVzVFLGlCQUdFLDJCQUFBLEFBQW1CLGtCQUFBLENBQ3BCLEFBRUQsS0FHRSwwQkFBMEIsQUFDMUIsOEJBSEEsQUFHOEIsdUJBSFAsQUFDdkIsZ0JBQWlCLENBR2xCLEFBU0QsS0FDRSxRQUFTLENBQ1YsQUFNRCx3Q0FNRSxhQUFjLENBQ2YsQUFPRCxHQUNFLGNBQWMsQUFDZCxjQUFnQixDQUNqQixBQVVELHVCQUdFLGFBQWMsQ0FDZixBQU1ELE9BQ0UsZUFBZ0IsQ0FDakIsQUFPRCxHQUNFLCtCQUFBLEFBQXVCLHVCQUFBLEFBQ3ZCLFNBQVMsQUFDVCxnQkFBaUIsQ0FDbEIsQUFPRCxJQUNFLGdDQUFpQyxBQUNqQyxhQUFjLENBQ2YsQUFVRCxFQUVFLHFDQURBLEFBQ3FDLDRCQURSLENBRTlCLEFBT0QsaUJBRUUsZUFBZ0IsQ0FDakIsQUFPRCxZQUdFLHlDQUZBLEFBRWlDLG1CQUZkLEFBQ25CLDBCQUEwQixBQUMxQixnQ0FBaUMsQ0FDbEMsQUFNRCxTQUVFLG9CQUFvQixBQVNwQixrQkFBbUIsQ0FScEIsQUFnQkQsY0FHRSxnQ0FBaUMsQUFDakMsYUFBYyxDQUNmLEFBTUQsSUFDRSxpQkFBa0IsQ0FDbkIsQUFNRCxLQUNFLHNCQUFzQixBQUN0QixVQUFXLENBQ1osQUFNRCxNQUNFLGFBQWMsQ0FDZixBQU9ELFFBRUUsY0FBYyxBQUNkLGNBQWMsQUFDZCxrQkFBa0IsQUFDbEIsdUJBQXdCLENBQ3pCLEFBRUQsSUFDRSxhQUFlLENBQ2hCLEFBRUQsSUFDRSxTQUFXLENBQ1osQUFTRCxZQUVFLG9CQUFxQixDQUN0QixBQU1ELHNCQUNFLGFBQWEsQUFDYixRQUFTLENBQ1YsQUFNRCxJQUNFLGlCQUFrQixDQUNuQixBQU1ELGVBQ0UsZUFBZ0IsQ0FDakIsQUFVRCxzQ0FLRSxnREFBcUQsQUFDckQsZUFBZSxBQUNmLGlCQUFpQixBQUNqQixRQUFTLENBQ1YsQUFPRCxhQUVFLGdCQUFpQixDQUNsQixBQU9ELGNBRUUsbUJBQW9CLENBQ3JCLEFBUUQscURBSUUseUJBQTBCLENBQzNCLEFBTUQsd0hBSUUsa0JBQWtCLEFBQ2xCLFNBQVUsQ0FDWCxBQU1ELDRHQUlFLDZCQUE4QixDQUMvQixBQU1ELFNBQ0Usd0JBQXlCLEFBQ3pCLGFBQWEsQUFDYiwwQkFBOEIsQ0FDL0IsQUFTRCxPQUNFLDhCQUFBLEFBQXNCLHNCQUFBLEFBQ3RCLGNBQWMsQUFDZCxjQUFjLEFBQ2QsZUFBZSxBQUNmLFVBQVUsQUFDVixrQkFBbUIsQ0FDcEIsQUFPRCxTQUNFLHFCQUFxQixBQUNyQix1QkFBd0IsQ0FDekIsQUFNRCxTQUNFLGFBQWMsQ0FDZixBQ25DRCw2QkQ0Q0UsOEJBQUEsQUFBc0Isc0JBQUEsQUFDdEIsU0FBVSxDQUNYLEFDcENELGtGRDRDRSxXQUFZLENBQ2IsQUNyQ0QsY0Q2Q0UsNkJBQTZCLEFBQzdCLG1CQUFvQixDQUNyQixBQ3RDRCxxRkQ4Q0UsdUJBQXdCLENBQ3pCLEFBT0QsNkJBQ0UsMEJBQTBCLEFBQzFCLFlBQWEsQ0FDZCxBQVVELGFBRUUsYUFBYyxDQUNmLEFBTUQsUUFDRSxpQkFBa0IsQ0FDbkIsQUFTRCxPQUNFLG9CQUFxQixDQUN0QixBQ3hDRCxrQkQwREUsWUFBYSxDQUNkLEFFNWNELGtCQUNHLGlCQ0orQixDREtoQyxBQUVGLGNBQ0csK0NFRTZELENGRDlELEFBR0YsU0FFQyxjR0pBLEFDSzBCLGVIZk8sQUVXakMsc0JGWGlDLENEZWpDLEFBRUQseUNBQ0MsYUlENkIsQ0pFN0IsQUFFRCxnQkFFQyxjR2JBLEFDSzBCLG9CSGZPLEFFV2pDLHNCRlhpQyxDRHdCakMsQUFFRCwwREFFQyxjR2xCQSxBQ0swQixxQkhmTyxBRVdqQyxzQkZYaUMsQ0Q2QmpDLEFBRUQsZ0JBR0MsY0d4QkEsQUNLMEIsZUhmTyxBRVdqQyx1QkZYaUMsQUVhaEMsd0JGYmdDLEFEaUNqQyxZQUFhLENBRWIsQUFFRCxvQkFFQyxjQURBLEFJdkIwQixlSnVCVixDQUVoQixBQUlELFNHbENDLHFCRlZpQyxBRVdqQyxnQkZYaUMsQ0RnRGpDLEFBSUQsd0JBTEMsY0FEQSxBSS9CMEIsbUJKK0JOLENBTXJCLEFBSUMsZUc5Q0EscUJGVmlDLEFFV2pDLHNCRlhpQyxDRHdEakMsQUFFRCw0Q0FHQyxjR25EQSxBQ0swQixlSGZPLEFENERqQyxvQkdqREEsQUhpRG9CLHNCQzVEYSxDRDhEakMsQUFJRCw4RkFHQyxjRzNEQSxBQ0swQixxQkhmTyxBRG9FakMsZ0JHekRBLEFIeURtQixzQkNwRWMsQ0RzRWpDLEFBRUQsMkRBR0MsY0dqRUEsQUNLMEIscUJIZk8sQUQwRWpDLGdCRy9EQSxBSCtEbUIsc0JDMUVjLENENEVqQyxBQUVELDJEQUdDLGNHdkVBLEFDSzBCLHFCSGZPLEFEZ0ZqQyxnQkdyRUEsQUhxRW1CLGdCQ2hGYyxDRGtGakMsQUFHRCwrQ0FFQyxhSXRFNkIsQ0p1RTdCLEFBSUQsVUdsRkMsZUZWaUMsQUVXakMsc0JGWGlDLENEa0dqQyxBQU5ELDRCQUlDLFVJN0Z1QixDSjhGckIsQUFHSCx1Q0FJQyxhSXBHNEIsQ0pxRzFCLEFBR0gsaUJHbEdDLG9CRlZpQyxBRVdqQyxzQkZYaUMsQ0Q4R2pDLEFBRUQsaUJHdEdDLHFCRlZpQyxBRVdqQyxzQkZYaUMsQ0RrSGpDLEFBRUQseUJBRUMsZUtwR2tCLENMcUdsQixBQUlELFNBQ0MsY0t6RDBCLEFMMEQxQix1QkM3SGlDLENEcUxqQyxBQTFERCxZR2pIQyxlRlZpQyxBRVdqQyx1QkZYaUMsQURpSWhDLHVCQ2pJZ0MsQ0RzSWhDLEFBWEYsOEJBU0csb0JDcEkrQixDRHFJL0IsQUFWSCxrQ0FjRSx1QkFBd0IsQ0FReEIsQUF0QkYscUNBZ0JHLDRCQUE0QixBQUM1Qix1QkM1SStCLENEZ0ovQixBQXJCSCx3Q0FtQkksMkJBQTRCLENBQzVCLEFBcEJKLG9DQXlCRSxvQkFBcUIsQ0FRckIsQUFqQ0YsdUNBMkJHLHVCQUF1QixBQUN2Qix1QkN2SitCLENEMkovQixBQWhDSCwwQ0E4Qkksc0JBQXVCLENBQ3ZCLEFBL0JKLDBDQW9DRyx3QkFBd0IsQUFDeEIsWUFBYSxDQVFkLEFBN0NGLDZDQXVDSSw0QkFBNEIsQUFDNUIsdUJDbks4QixDRHVLL0IsQUE1Q0gsZ0RBMENLLDJCQUE0QixDQUM3QixBQTNDSiw0Q0FnREcscUJBQXFCLEFBQ3JCLFlBQWEsQ0FRZCxBQXpERiwrQ0FtREksdUJBQXVCLEFBQ3ZCLHVCQy9LOEIsQ0RtTC9CLEFBeERILGtEQXNESyxzQkFBdUIsQ0FDeEIsQUFLSixtQkFDRyxnQkFBZ0IsQUFDbEIsY0FBZSxDQUlmLEFBTkQsc0JBSUUsdUJDM0xnQyxDRDRMaEMsQUFVRixnRUFFQyxpQkFBa0IsQ0FDbEIsQUFFRCwwQ0FFQyxnQkFBaUIsQUFDakIsaUJBQWtCLENBQ2xCLEFBWUQsOEhBRUMsaUJBQWtCLENBQ2xCLEFBRUQsNEJBQ0MsZUFBZ0IsQ0FDaEIsQUFJRCxTQUlDLG1CQUZBLEFJdE8wQixjQUVFLEFETTVCLGVGVmlDLEFFV2pDLHVCRlhpQyxBRDJPakMsaUJLakw2QixDTGtMN0IsQUFFRCxpQ0FQQywyQ0U1TjBELENGbU8zRCxBQUtDLHdCQUZBLG1CSTdOMkIsQUo4TjNCLGFLM0wwQixDTDRMMUIsQUZwT0QsS1FYRSxpQkxKZ0MsQ0tLakMsQVJ3QkQsS1FwQkUsY0FEQSxBRk95QiwrQ0ZMcUMsQ0lBL0QsQUFHRCxrQkFPRSxnQkFEQSxBQUNnQixZQURILENBRWQsQUE0QkQsOEJBTUMsZUFBZ0IsQ0FDaEIsQUFFRCxNQUNDLGVBQWdCLENBQ2hCLEFBRUQsd0JBSUMsY0FBZSxDQUNmLEFBRUQsT0FDQyxrQkFBbUIsQ0FrQm5CLEFBbkJELG9CQUtFLGVBQWdCLENBQ2hCLEFBK0JGLFNBT0ksaUJBQWtCLENBQ25CLEFBUkgsU0FXSSxnQkFBaUIsQ0FDbEIsQUFaSCxTQWVJLGNBQWUsQ0FDaEIsQUFoQkgsMkJBcUJJLGVBQWlCLENBQ2xCLEFBSUgsTUFJRSx5QkFEQSxBQUN5QixtQkFGekIsQUFDbUIsZUFGbkIsQUFDZSxVQURKLENBdUJaLEFBeEJELGtCQVNJLHVCQURBLEFBQ3VCLFlBRFgsQUFJWixnQkFGQSxBQUVnQixrQkFGRyxDQUdwQixBQWJILGVBa0JJLGFBRkEsQUFFb0IscUJBRkUsQ0FHdkIsQVI1Q0gsRVF1REUsY0ZqS3FDLEFFa0tyQyx5QkFBMEIsQ0FjM0IsQUFoQkQsa0NBT0ksY0Z0S3VCLEFFdUt2QixvQkFBcUIsQ0FSekIsQUFlRyxRSDdKRix3QkFBQSxBQUFlLGdCQUFBLEFBQ2YsMEJDb0N1QixBRG5DdkIsa0JBQW1CLENHMkpqQixBQWFILGlCQUVDLG9CQUFxQixDQUNyQixBQUVELHFCQU1JLFdBQVksQ0FDYixBUjFCSCxLUThCRSxrQkZyTWdDLENFc01qQyxBUnRCRCxNSzlLQyxvQkZWaUMsQUVXakMsc0JGWGlDLENLc05qQyxBUnJCRCxRUXlCRSxhQUFjLENBQ2YsQVJsQkQsSVFxQkUsU0FBVyxDQUNaLEFSbEJELElRcUJFLFVBQVksQ0FDYixBUnJJRCxJUTJJQyxlQUFlLEFBQ2YsZUFBZ0IsQ0FDaEIsQUFFRCxhQUdFLDJDSnJPeUQsQ0lzTzFELEFBRUQsT0hoT0Msd0JBQUEsQUFBZSxnQkFBQSxBQUNmLDBCQ29DdUIsQURuQ3ZCLGtCQUFtQixDR2dPbkIsQUNoUEQsbUJBQ0UsaUJBQWlCLENBdUZsQixBQXhGRCw2QkFJSSxnQkFBZSxBQUNmLFFBQVEsQ0FDVCxBQU5ILDJCQVVJLFNBREEsQUFDUyxTQURDLENBT1gsQUFoQkgsOEJBY00scUJBREEsQUFDcUIsb0JBREEsQ0FFdEIsQUFmTCxpREFxQlEsb0NBQW9DLEFBQ3BDLGFIWm1CLENHYXBCLEFBdkJQLHFIQTRCUSxnQ0hmbUIsQUdnQm5CLGFIbkJtQixDR29CcEIsQUE5QlAsNkJBd0NJLGNBRkEsQUgxQjBCLGVHMEJYLEFBQ2YsY0FGQSxBQUVjLG9CQUZPLENBSXRCLEFBekNILG9EQW9DSSxnQkFEQSxBQUNnQixjQURELENBZWhCLEFBbERILDhCQWdETSxhSHBDd0IsQ0dxQ3pCLEFBakRMLHdCQXFESSx3Qkh4RHVCLENHa0Z4QixBQS9FSCxrQ0F3RE0sYUgxQ2lCLENHMkNsQixBQXpETCxzREE4RFUsVUFBWSxDQUNiLEFBL0RULGtFQW9FVSxnQ0h0RGEsQUd1RGIsVUFBWSxDQUNiLEFBdEVULG1DQTRFUSxhSDlEZSxDRytEaEIsQUE3RVAsK0JBa0ZJLHlCSDVFdUMsQUdnRnZDLFNBTEEsQUFLUSxXQUxFLEFBSVYsZ0JBREEsQUFDZ0IsVUFGaEIsQUFDUyxpQkFEUSxDQUlsQiIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2NS4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMy4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpblxuICogICAgSUUgb24gV2luZG93cyBQaG9uZSBhbmQgaW4gaU9TLlxuICovXG5cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7XG59XG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMiAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMyAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4geyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBDYWxpYnJpLCBUYWhvbWEsIHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiLyohIG5vcm1hbGl6ZS5jc3MgdjUuMC4wIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAzLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXG4gKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuKixcbio6YmVmb3JlLFxuKjphZnRlciB7XG4gIGJveC1zaXppbmc6IGluaGVyaXQ7IH1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAyICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAzICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMyAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5tYWluIHtcbiAgLyogMSAqL1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgZ2FwcyBpbiBsaW5rcyB1bmRlcmxpbmUgaW4gaU9TIDgrIGFuZCBTYWZhcmkgOCsuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIG91dGxpbmUgb24gZm9jdXNlZCBsaW5rcyB3aGVuIHRoZXkgYXJlIGFsc28gYWN0aXZlIG9yIGhvdmVyZWRcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lLXdpZHRoOiAwOyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCB0aGUgZHVwbGljYXRlIGFwcGxpY2F0aW9uIG9mIGBib2xkZXJgIGJ5IHRoZSBuZXh0IHJ1bGUgaW4gU2FmYXJpIDYuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogaW5oZXJpdDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHN0eWxlIGluIEFuZHJvaWQgNC4zLS5cbiAqL1xuZGZuIHtcbiAgZm9udC1zdHlsZTogaXRhbGljOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGJhY2tncm91bmQgYW5kIGNvbG9yIGluIElFIDktLlxuICovXG5tYXJrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcbiAgY29sb3I6ICMwMDA7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuYXVkaW8sXG52aWRlbyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBmb250LWZhbWlseTogJ09wZW4gU2FucycsIENhbGlicmksIFRhaG9tYSwgc2Fucy1zZXJpZjtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbixcbmlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sXG5zZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogMS4gUHJldmVudCBhIFdlYktpdCBidWcgd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gIGFuZCBgdmlkZW9gXG4gKiAgICBjb250cm9scyBpbiBBbmRyb2lkIDQuXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENoYW5nZSB0aGUgYm9yZGVyLCBtYXJnaW4sIGFuZCBwYWRkaW5nIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRS5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLS5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC0uXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgYW5kIGNhbmNlbCBidXR0b25zIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyxcbm1lbnUge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIFNjcmlwdGluZ1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFLlxuICovXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogSGlkZGVuXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cbltoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4ucGUtYmFzZS1mb250c2l6ZSB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07IH1cblxuLnBlLWZvbnRzdGFjayB7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBDYWxpYnJpLCBUYWhvbWEsIHNhbnMtc2VyaWY7IH1cblxuLnBlLWNvcHkge1xuICBmb250LXNpemU6IDFyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjU3MTQzcmVtO1xuICBjb2xvcjogIzI1MjUyNTsgfVxuXG4ucGUtY29weS0tc2Vjb25kYXJ5LCAucGUtbGFiZWwtLXNlY29uZGFyeSB7XG4gIGNvbG9yOiAjNkE3MDcwOyB9XG5cbi5wZS1jb3B5LS1zbWFsbCB7XG4gIGZvbnQtc2l6ZTogMC44NTcxNHJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNDI4NTdyZW07XG4gIGNvbG9yOiAjMjUyNTI1OyB9XG5cbi5wZS1jb3B5LS1sYXJnZSwgLnBlLWhlYWRpbmctbGV2ZWw2LCBoNiwgaGVhZGVyIGg1ICsgLnN1YnRpdGxlIHtcbiAgZm9udC1zaXplOiAxLjE0Mjg2cmVtO1xuICBsaW5lLWhlaWdodDogMS43MTQyOXJlbTtcbiAgY29sb3I6ICMyNTI1MjU7IH1cblxuLnBlLXBhcmFncmFwaCwgcCB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTcxNDNyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuODU3MTRyZW07XG4gIG1hcmdpbi10b3A6IDA7XG4gIGNvbG9yOiAjMjUyNTI1OyB9XG5cbi5wZS1wYXJhZ3JhcGgtLWxhc3Qge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBjb2xvcjogIzI1MjUyNTsgfVxuXG4ucGUtbGVhZCB7XG4gIGZvbnQtc2l6ZTogMS40Mjg1N3JlbTtcbiAgbGluZS1oZWlnaHQ6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBjb2xvcjogIzI1MjUyNTsgfVxuXG4ucGUtcGFnZS10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMi43MTQyOXJlbTtcbiAgbGluZS1oZWlnaHQ6IDMuNzE0MjlyZW07XG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuICBjb2xvcjogIzI1MjUyNTsgfVxuXG4ucGUtcGFnZS10aXRsZS0tc21hbGwsIC5wZS1oZWFkaW5nLWxldmVsMSwgaDEge1xuICBmb250LXNpemU6IDJyZW07XG4gIGxpbmUtaGVpZ2h0OiAyLjcxNDI5cmVtO1xuICBmb250LXdlaWdodDogbGlnaHRlcjtcbiAgY29sb3I6ICMyNTI1MjU7IH1cblxuLnBlLXRpdGxlLCAucGUtaGVhZGluZy1sZXZlbDMsIGgzLCBoZWFkZXIgaDIgKyAuc3VidGl0bGUsIC5wZS1oZWFkaW5nLWxldmVsNCwgaDQsIGhlYWRlciBoMyArIC5zdWJ0aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS40Mjg1N3JlbTtcbiAgbGluZS1oZWlnaHQ6IDEuODU3MTRyZW07XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjMjUyNTI1OyB9XG5cbi5wZS10aXRsZS0tc21hbGwsIC5wZS1oZWFkaW5nLWxldmVsNSwgaDUsIGhlYWRlciBoNCArIC5zdWJ0aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4yODU3MXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuNTcxNDNyZW07XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjMjUyNTI1OyB9XG5cbi5wZS10aXRsZS0tbGFyZ2UsIC5wZS1oZWFkaW5nLWxldmVsMiwgaDIsIGhlYWRlciBoMSArIC5zdWJ0aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS43MTQyOXJlbTtcbiAgbGluZS1oZWlnaHQ6IDJyZW07XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGNvbG9yOiAjMjUyNTI1OyB9XG5cbi5wZS1wYWdlLXRpdGxlLS1zZWNvbmRhcnksXG4ucGUtdGl0bGUtLXNlY29uZGFyeSB7XG4gIGNvbG9yOiAjNkE3MDcwOyB9XG5cbi5wZS1sYWJlbCB7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgbGluZS1oZWlnaHQ6IDEuMjg1NzFyZW07IH1cbiAgLnBlLWxhYmVsLnBlLWxhYmVsLS1pbnZlcnNlIHtcbiAgICBjb2xvcjogI0ZGRkZGRjsgfVxuXG4ucGUtbGFiZWwtLXNlY29uZGFyeS5wZS1sYWJlbC0taW52ZXJzZSB7XG4gIGNvbG9yOiAjRjVGNUY1OyB9XG5cbi5wZS1sYWJlbC0tc21hbGwge1xuICBmb250LXNpemU6IDAuODU3MTRyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjE0Mjg2cmVtOyB9XG5cbi5wZS1sYWJlbC0tbGFyZ2Uge1xuICBmb250LXNpemU6IDEuMTQyODZyZW07XG4gIGxpbmUtaGVpZ2h0OiAxLjQyODU3cmVtOyB9XG5cbi5wZS1sYWJlbC0tYm9sZCxcbi5wZS1ib2xkIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuXG4ucGUtbGlzdCB7XG4gIG1hcmdpbjogMTJweCAwO1xuICBwYWRkaW5nLWxlZnQ6IDEuODU3MTRyZW07IH1cbiAgLnBlLWxpc3QgbGkge1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBsaW5lLWhlaWdodDogMS41NzE0M3JlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjg1NzE0cmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNDI4NTdyZW07IH1cbiAgICAucGUtbGlzdCBsaSA+IG9sLFxuICAgIC5wZS1saXN0IGxpID4gdWwge1xuICAgICAgbWFyZ2luLXRvcDogMC40Mjg1N3JlbTsgfVxuICAucGUtbGlzdC5wZS1zdHlsZWQtbGlzdHMtLW9yZGVyZWQge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDsgfVxuICAgIC5wZS1saXN0LnBlLXN0eWxlZC1saXN0cy0tb3JkZXJlZCBvbCB7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IGxvd2VyLWFscGhhO1xuICAgICAgcGFkZGluZy1sZWZ0OiAxLjg1NzE0cmVtOyB9XG4gICAgICAucGUtbGlzdC5wZS1zdHlsZWQtbGlzdHMtLW9yZGVyZWQgb2wgb2wge1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IGxvd2VyLXJvbWFuOyB9XG4gIC5wZS1saXN0LnBlLXN0eWxlZC1saXN0cy0tdW5vcmRlcmVkIHtcbiAgICBsaXN0LXN0eWxlLXR5cGU6IGRpc2M7IH1cbiAgICAucGUtbGlzdC5wZS1zdHlsZWQtbGlzdHMtLXVub3JkZXJlZCB1bCB7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IGNpcmNsZTtcbiAgICAgIHBhZGRpbmctbGVmdDogMS44NTcxNHJlbTsgfVxuICAgICAgLnBlLWxpc3QucGUtc3R5bGVkLWxpc3RzLS11bm9yZGVyZWQgdWwgdWwge1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IHNxdWFyZTsgfVxuICAucGUtbGlzdC5wZS1zdHlsZWQtbGlzdHMtaGVhZGluZy0tb3JkZXJlZCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsO1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgICAucGUtbGlzdC5wZS1zdHlsZWQtbGlzdHMtaGVhZGluZy0tb3JkZXJlZCBvbCB7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IGxvd2VyLWFscGhhO1xuICAgICAgcGFkZGluZy1sZWZ0OiAxLjg1NzE0cmVtOyB9XG4gICAgICAucGUtbGlzdC5wZS1zdHlsZWQtbGlzdHMtaGVhZGluZy0tb3JkZXJlZCBvbCBvbCB7XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbG93ZXItcm9tYW47IH1cbiAgLnBlLWxpc3QucGUtc3R5bGVkLWxpc3RzLWhlYWRpbmctLXVub3JkZXJlZCB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBkaXNjO1xuICAgIG1hcmdpbi10b3A6IDA7IH1cbiAgICAucGUtbGlzdC5wZS1zdHlsZWQtbGlzdHMtaGVhZGluZy0tdW5vcmRlcmVkIHVsIHtcbiAgICAgIGxpc3Qtc3R5bGUtdHlwZTogY2lyY2xlO1xuICAgICAgcGFkZGluZy1sZWZ0OiAxLjg1NzE0cmVtOyB9XG4gICAgICAucGUtbGlzdC5wZS1zdHlsZWQtbGlzdHMtaGVhZGluZy0tdW5vcmRlcmVkIHVsIHVsIHtcbiAgICAgICAgbGlzdC1zdHlsZS10eXBlOiBzcXVhcmU7IH1cblxuLnBlLWxpc3QtLXVuc3R5bGVkIHtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XG4gIC5wZS1saXN0LS11bnN0eWxlZCB1bCB7XG4gICAgcGFkZGluZy1sZWZ0OiAxLjg1NzE0cmVtOyB9XG5cbi5wZS1oZWFkaW5nLWxldmVsMSwgaDEge1xuICBtYXJnaW4tYm90dG9tOiA2cHg7IH1cblxuLnBlLWhlYWRpbmctbGV2ZWwyLCBoMiwgaGVhZGVyIGgxICsgLnN1YnRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogNnB4OyB9XG5cbi5wZS1oZWFkaW5nLWxldmVsMywgaDMsIGhlYWRlciBoMiArIC5zdWJ0aXRsZSB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xuICBtYXJnaW4tYm90dG9tOiA2cHg7IH1cblxuLnBlLWhlYWRpbmctbGV2ZWw0LCBoNCwgaGVhZGVyIGgzICsgLnN1YnRpdGxlIHtcbiAgbWFyZ2luLWJvdHRvbTogNnB4OyB9XG5cbi5wZS1oZWFkaW5nLWxldmVsNSwgaDUsIGhlYWRlciBoNCArIC5zdWJ0aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IDZweDsgfVxuXG4ucGUtaGVhZGluZy1sZXZlbDYsIGg2LCBoZWFkZXIgaDUgKyAuc3VidGl0bGUge1xuICBtYXJnaW4tYm90dG9tOiA2cHg7IH1cblxuKiArIFtjbGFzc149XCJwZS1oZWFkaW5nLWxldmVsXCJdIHtcbiAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG4ucGUtY29kZSB7XG4gIGZvbnQtZmFtaWx5OiBNb25hY28sIFwiTHVjaWRhIENvbnNvbGVcIiwgbW9ub3NwYWNlO1xuICBjb2xvcjogI0Y1RjVGNTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBsaW5lLWhlaWdodDogMS40Mjg1N3JlbTtcbiAgYmFja2dyb3VuZDogIzAwNUE3MDtcbiAgcGFkZGluZzogMzBweCA1MHB4OyB9XG5cbi5wZS1jb2RlLWlubGluZSxcbi5wZS1rYmQge1xuICBmb250LWZhbWlseTogTW9uYWNvLCBcIkx1Y2lkYSBDb25zb2xlXCIsIG1vbm9zcGFjZTtcbiAgYmFja2dyb3VuZDogI0U5RTlFOTtcbiAgcGFkZGluZzogMCA0cHg7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMC44NzVyZW07IH1cblxuYm9keSB7XG4gIGZvbnQtZmFtaWx5OiBcIk9wZW4gU2Fuc1wiLCBDYWxpYnJpLCBUYWhvbWEsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAjMjUyNTI1OyB9XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cblxuKiArIGgxLFxuKiArIGgyLFxuKiArIGgzLFxuKiArIGg0LFxuKiArIGg1LFxuKiArIGg2IHtcbiAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG5oMSArIGgyIHtcbiAgbWFyZ2luLXRvcDogNDBweDsgfVxuXG5oMiArIGgzLFxuaDMgKyBoNCxcbmg0ICsgaDUsXG5oNSArIGg2IHtcbiAgbWFyZ2luLXRvcDogNnB4OyB9XG5cbmhlYWRlciB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cbiAgaGVhZGVyIGgxICsgLnN1YnRpdGxlIHtcbiAgICBtYXJnaW4tdG9wOiAzNHB4OyB9XG5cbmFzaWRlIGgxIHtcbiAgZm9udC1zaXplOiAxLjI1cmVtOyB9XG5cbmFzaWRlIGgyIHtcbiAgZm9udC1zaXplOiAxLjFyZW07IH1cblxuYXNpZGUgaDMge1xuICBmb250LXNpemU6IDFyZW07IH1cblxuYXNpZGUgaDQsXG5hc2lkZSBoNSxcbmFzaWRlIGg2IHtcbiAgZm9udC1zaXplOiAwLjhyZW07IH1cblxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAzNXB4O1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOyB9XG4gIHRhYmxlIHRoLFxuICB0YWJsZSB0ZCB7XG4gICAgcGFkZGluZzogOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQyODU3MTQzO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICB0YWJsZSB0aGVhZCB0aCB7XG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgICBib3JkZXItdG9wOiAwcHggbm9uZTsgfVxuXG5hIHtcbiAgY29sb3I6ICMwNDdBOUM7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gIGE6aG92ZXIsIGE6YWN0aXZlLCBhLmFjdGl2ZSB7XG4gICAgY29sb3I6ICMwMDVBNzA7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIGE6Zm9jdXMge1xuICAgIGNvbG9yOiAjMDA1QTcwO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIG91dGxpbmU6IDJweCBzb2xpZCAjMEI3M0RBO1xuICAgIG91dGxpbmUtb2Zmc2V0OiA0cHg7IH1cblxuYWJicixcbmFiYnJbdGl0bGVdIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG5cbmluczpiZWZvcmUge1xuICBjb250ZW50OiAnKyc7IH1cblxuaW5zOmFmdGVyIHtcbiAgY29udGVudDogJysnOyB9XG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjRkZCODFDOyB9XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiAwLjg1NzE0cmVtO1xuICBsaW5lLWhlaWdodDogMS4xNDI4NnJlbTsgfVxuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDkwJTsgfVxuXG5zdWIge1xuICB0b3A6IDAuMnJlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjJyZW07IH1cblxucHJlIHtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBvdmVyZmxvdy14OiBhdXRvOyB9XG5cbnByZSxcbmNvZGUsXG5rYmQge1xuICBmb250LWZhbWlseTogTW9uYWNvLCBcIkx1Y2lkYSBDb25zb2xlXCIsIG1vbm9zcGFjZTsgfVxuXG46Zm9jdXMge1xuICBib3gtc2hhZG93OiBub25lO1xuICBvdXRsaW5lOiAycHggc29saWQgIzBCNzNEQTtcbiAgb3V0bGluZS1vZmZzZXQ6IDRweDsgfVxuXG4udGFiYmVkLW5hdmlnYXRpb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLnRhYmJlZC1uYXZpZ2F0aW9uIC50YWItbmFtZSB7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBib3JkZXI6IDA7IH1cbiAgLnRhYmJlZC1uYXZpZ2F0aW9uIHVsLnRhYnMge1xuICAgIHBhZGRpbmc6IDA7XG4gICAgbWFyZ2luOiAwOyB9XG4gICAgLnRhYmJlZC1uYXZpZ2F0aW9uIHVsLnRhYnMgPiBsaSB7XG4gICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cbiAgLnRhYmJlZC1uYXZpZ2F0aW9uIGxpLnRhYi10aXRsZS5hY3RpdmUgLnRhYi1uYW1lIHtcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgY29sb3I6ICMyNTI1MjU7IH1cbiAgLnRhYmJlZC1uYXZpZ2F0aW9uIGxpLnRhYi10aXRsZTpob3Zlcjpub3QoLmFjdGl2ZSkgLnRhYi1uYW1lLCAudGFiYmVkLW5hdmlnYXRpb24gbGkudGFiLXRpdGxlOmhvdmVyOm5vdChsaSkgLnRhYi1uYW1lIHtcbiAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgI0M3QzdDNztcbiAgICBjb2xvcjogIzI1MjUyNTsgfVxuICAudGFiYmVkLW5hdmlnYXRpb24gLnRhYi1uYW1lIHtcbiAgICBwYWRkaW5nOiAuNWVtIDA7XG4gICAgbWFyZ2luOiAuNWVtIDFlbTtcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIGNvbG9yOiAjNkE3MDcwOyB9XG4gIC50YWJiZWQtbmF2aWdhdGlvbiBkaXYge1xuICAgIHBhZGRpbmc6IC41ZW0gMDtcbiAgICBtYXJnaW46IC41ZW0gMWVtOyB9XG4gICAgLnRhYmJlZC1uYXZpZ2F0aW9uIGRpdiBidXR0b24ge1xuICAgICAgY29sb3I6ICM2QTcwNzA7IH1cbiAgLnRhYmJlZC1uYXZpZ2F0aW9uLmRhcmsge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDVBNzA7IH1cbiAgICAudGFiYmVkLW5hdmlnYXRpb24uZGFyayAudGFiLW5hbWUge1xuICAgICAgY29sb3I6ICNEOUQ5RDk7IH1cbiAgICAudGFiYmVkLW5hdmlnYXRpb24uZGFyayBsaS50YWItdGl0bGUuYWN0aXZlIC50YWItbmFtZSB7XG4gICAgICBjb2xvcjogd2hpdGU7IH1cbiAgICAudGFiYmVkLW5hdmlnYXRpb24uZGFyayBsaS50YWItdGl0bGU6aG92ZXI6bm90KC5hY3RpdmUpIC50YWItbmFtZSB7XG4gICAgICBib3JkZXItYm90dG9tOiAzcHggc29saWQgI0Q5RDlEOTtcbiAgICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgIC50YWJiZWQtbmF2aWdhdGlvbi5kYXJrIGRpdiBidXR0b24ge1xuICAgICAgY29sb3I6ICNEOUQ5RDk7IH1cbiAgLnRhYmJlZC1uYXZpZ2F0aW9uIC50YWItc2xpZGVyIHtcbiAgICBoZWlnaHQ6IDNweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTlBNkE0O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogLjVlbSAxZW07XG4gICAgYm90dG9tOiAwOyB9XG4iLCJAaW1wb3J0ICcuL3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICcuL2Z1bmN0aW9ucyc7XG5AaW1wb3J0ICcuL21peGlucyc7XG5AaW1wb3J0ICcuLi8uLi9iYXNlL21peGlucyc7XG5cbi5wZS1iYXNlLWZvbnRzaXplIHtcbiAgIGZvbnQtc2l6ZTogcHhUb1JlbSgkcGUtZm9udC1zaXplLWJhc2UsIDE2cHgpO1xuIH1cblxuLnBlLWZvbnRzdGFjayAge1xuICAgZm9udC1mYW1pbHk6ICRwZS1mb250LWZhbWlseS1zYW5zO1xuIH1cblxuLy8gQm9keSBjb3B5IChhcyBhIGNsYXNzLCBmcm9tIHV0aWxpdGllcylcbi5wZS1jb3B5IHtcblx0QGluY2x1ZGUgZm9udC1zaXplKCRwZS1mb250LXNpemUtYmFzZSwgJHBlLWxpbmUtaGVpZ2h0LWNvcHkpO1xuXHRjb2xvcjogJHBlLWZvbnQtY29sb3ItYmFzZTtcbn1cblxuLnBlLWNvcHktLXNlY29uZGFyeSB7XG5cdGNvbG9yOiAkcGUtZm9udC1jb2xvci1zZWNvbmRhcnk7XG59XG5cbi5wZS1jb3B5LS1zbWFsbCB7XG5cdEBpbmNsdWRlIGZvbnQtc2l6ZSgkcGUtZm9udC1zaXplLXNtYWxsLCAkcGUtbGluZS1oZWlnaHQtY29weS1zbWFsbCk7XG5cdGNvbG9yOiAkcGUtZm9udC1jb2xvci1iYXNlO1xufVxuXG4ucGUtY29weS0tbGFyZ2Uge1xuXHRAaW5jbHVkZSBmb250LXNpemUoJHBlLWZvbnQtc2l6ZS1sYXJnZSwgJHBlLWxpbmUtaGVpZ2h0LWNvcHktbGFyZ2UpO1xuXHRjb2xvcjogJHBlLWZvbnQtY29sb3ItYmFzZTtcbn1cblxuLnBlLXBhcmFncmFwaCB7XG5cdEBpbmNsdWRlIGZvbnQtc2l6ZSgkcGUtZm9udC1zaXplLWJhc2UsICRwZS1saW5lLWhlaWdodC1jb3B5LCAxMnB4KTtcblx0bWFyZ2luLXRvcDogMDtcblx0Y29sb3I6ICRwZS1mb250LWNvbG9yLWJhc2U7XG59XG5cbi5wZS1wYXJhZ3JhcGgtLWxhc3Qge1xuXHRtYXJnaW4tYm90dG9tOiAwO1xuXHRjb2xvcjogJHBlLWZvbnQtY29sb3ItYmFzZTtcbn1cblxuLy8gTGVhZHNcblxuLnBlLWxlYWQge1xuXHRAaW5jbHVkZSBmb250LXNpemUoJHBlLWZvbnQtc2l6ZS1sZWFkLCAkcGUtbGluZS1oZWlnaHQtbGVhZCk7XG5cdGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuXHRjb2xvcjogJHBlLWZvbnQtY29sb3ItYmFzZTtcbn1cblxuLy8gUGFnZSB0aXRsZXNcblxuLnBlLXBhZ2UtdGl0bGUge1xuXHRAaW5jbHVkZSBmb250LXNpemUoJHBlLWZvbnQtc2l6ZS1wYWdlLXRpdGxlLCAkcGUtbGluZS1oZWlnaHQtcGFnZS10aXRsZSk7XG5cdGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xuXHRjb2xvcjogJHBlLWZvbnQtY29sb3ItYmFzZTtcbn1cblxuLnBlLXBhZ2UtdGl0bGUtLXNtYWxsIHtcblx0QGluY2x1ZGUgZm9udC1zaXplKCRwZS1mb250LXNpemUtcGFnZS10aXRsZS1zbWFsbCwgJHBlLWxpbmUtaGVpZ2h0LXBhZ2UtdGl0bGUtc21hbGwpO1xuXHRmb250LXdlaWdodDogbGlnaHRlcjtcblx0Y29sb3I6ICRwZS1mb250LWNvbG9yLWJhc2U7XG59XG5cbi8vIFRpdGxlc1xuXG4ucGUtdGl0bGUge1xuXHRAaW5jbHVkZSBmb250LXNpemUoJHBlLWZvbnQtc2l6ZS1zY3RuLXRpdGxlLCAkcGUtbGluZS1oZWlnaHQtc2N0bi10aXRsZSk7XG5cdGZvbnQtd2VpZ2h0OiBub3JtYWw7XG5cdGNvbG9yOiAkcGUtZm9udC1jb2xvci1iYXNlO1xufVxuXG4ucGUtdGl0bGUtLXNtYWxsIHtcblx0QGluY2x1ZGUgZm9udC1zaXplKCRwZS1mb250LXNpemUtc2N0bi10aXRsZS1zbWFsbCwgJHBlLWxpbmUtaGVpZ2h0LXNjdG4tdGl0bGUtc21hbGwpO1xuXHRmb250LXdlaWdodDogbm9ybWFsO1xuXHRjb2xvcjogJHBlLWZvbnQtY29sb3ItYmFzZTtcbn1cblxuLnBlLXRpdGxlLS1sYXJnZSB7XG5cdEBpbmNsdWRlIGZvbnQtc2l6ZSgkcGUtZm9udC1zaXplLXNjdG4tdGl0bGUtbGFyZ2UsICRwZS1saW5lLWhlaWdodC1zY3RuLXRpdGxlLWxhcmdlKTtcblx0Zm9udC13ZWlnaHQ6IG5vcm1hbDtcblx0Y29sb3I6ICRwZS1mb250LWNvbG9yLWJhc2U7XG59XG5cbi8vIFNlY29uZGFyeSBjb2xvcnMgZm9yIHRpdGxlc1xuLnBlLXBhZ2UtdGl0bGUtLXNlY29uZGFyeSxcbi5wZS10aXRsZS0tc2Vjb25kYXJ5IHtcblx0Y29sb3I6ICRwZS1mb250LWNvbG9yLXNlY29uZGFyeTtcbn1cblxuLy8gTGFiZWxzXG5cbi5wZS1sYWJlbCB7XG5cdEBpbmNsdWRlIGZvbnQtc2l6ZSgkcGUtZm9udC1zaXplLWJhc2UsICRwZS1saW5lLWhlaWdodC1iYXNlKTtcblxuICAmLnBlLWxhYmVsLS1pbnZlcnNlIHtcblx0Y29sb3I6ICRwZS1mb250LWNvbG9yLWJhc2UtaW52ZXJzZTtcbiAgfVxufVxuXG4ucGUtbGFiZWwtLXNlY29uZGFyeSB7XG4gIEBleHRlbmQgLnBlLWNvcHktLXNlY29uZGFyeTtcblxuICAmLnBlLWxhYmVsLS1pbnZlcnNlIHtcblx0Y29sb3I6ICRwZS1mb250LWNvbG9yLXNlY29uZGFyeS1pbnZlcnNlO1xuICB9XG59XG5cbi5wZS1sYWJlbC0tc21hbGwge1xuXHRAaW5jbHVkZSBmb250LXNpemUoJHBlLWZvbnQtc2l6ZS1zbWFsbCwgJHBlLWxpbmUtaGVpZ2h0LXNtYWxsKTtcbn1cblxuLnBlLWxhYmVsLS1sYXJnZSB7XG5cdEBpbmNsdWRlIGZvbnQtc2l6ZSgkcGUtZm9udC1zaXplLWxhcmdlLCAkcGUtbGluZS1oZWlnaHQtbGFyZ2UpO1xufVxuXG4ucGUtbGFiZWwtLWJvbGQsXG4ucGUtYm9sZCB7XG5cdGZvbnQtd2VpZ2h0OiAkcGUtbGFiZWwtYm9sZDtcbn1cblxuLy8gTGlzdHNcblxuLnBlLWxpc3Qge1xuXHRtYXJnaW46ICRwZS1tYXJnaW4tbGlzdDtcblx0cGFkZGluZy1sZWZ0OiBweFRvUmVtKCRwZS1wYWRkaW5nLWxlZnQtbGlzdC1wcmltYXJ5KTtcblxuXHRsaSB7XG4gICAgICAgICAgICAgICAgQGluY2x1ZGUgZm9udC1zaXplKCRwZS1mb250LXNpemUtYmFzZSwgJHBlLWxpbmUtaGVpZ2h0LWNvcHksIDEycHgpO1xuXHRcdG1hcmdpbi1ib3R0b206IHB4VG9SZW0oJHBlLXNwYWNlLWJldHdlZW4tbGlzdC1pdGVtcyk7XG5cdFx0PiBvbCxcblx0XHQ+IHVsIHtcblx0XHRcdG1hcmdpbi10b3A6IHB4VG9SZW0oJHBlLXNwYWNlLWJldHdlZW4tbGlzdC1pdGVtcyk7XG5cdFx0fVxuXHR9XG5cblx0Ji5wZS1zdHlsZWQtbGlzdHMtLW9yZGVyZWQge1xuXHRcdGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDtcblx0XHRvbCB7XG5cdFx0XHRsaXN0LXN0eWxlLXR5cGU6IGxvd2VyLWFscGhhO1xuXHRcdFx0cGFkZGluZy1sZWZ0OiBweFRvUmVtKCRwZS1wYWRkaW5nLWxlZnQtbGlzdC1wcmltYXJ5KTtcblx0XHRcdG9sIHtcblx0XHRcdFx0bGlzdC1zdHlsZS10eXBlOiBsb3dlci1yb21hbjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQmLnBlLXN0eWxlZC1saXN0cy0tdW5vcmRlcmVkIHtcblx0XHRsaXN0LXN0eWxlLXR5cGU6IGRpc2M7XG5cdFx0dWwge1xuXHRcdFx0bGlzdC1zdHlsZS10eXBlOiBjaXJjbGU7XG5cdFx0XHRwYWRkaW5nLWxlZnQ6IHB4VG9SZW0oJHBlLXBhZGRpbmctbGVmdC1saXN0LXByaW1hcnkpO1xuXHRcdFx0dWwge1xuXHRcdFx0XHRsaXN0LXN0eWxlLXR5cGU6IHNxdWFyZTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQmLnBlLXN0eWxlZC1saXN0cy1oZWFkaW5nLS1vcmRlcmVkIHtcblx0ICBsaXN0LXN0eWxlLXR5cGU6IGRlY2ltYWw7XG5cdCAgbWFyZ2luLXRvcDogMDtcblx0XHRvbCB7XG5cdFx0ICBsaXN0LXN0eWxlLXR5cGU6IGxvd2VyLWFscGhhO1xuXHRcdCAgcGFkZGluZy1sZWZ0OiBweFRvUmVtKCRwZS1wYWRkaW5nLWxlZnQtbGlzdC1wcmltYXJ5KTtcblx0XHRcdG9sIHtcblx0XHRcdCAgbGlzdC1zdHlsZS10eXBlOiBsb3dlci1yb21hbjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQmLnBlLXN0eWxlZC1saXN0cy1oZWFkaW5nLS11bm9yZGVyZWQge1xuXHQgIGxpc3Qtc3R5bGUtdHlwZTogZGlzYztcblx0ICBtYXJnaW4tdG9wOiAwO1xuXHRcdHVsIHtcblx0XHQgIGxpc3Qtc3R5bGUtdHlwZTogY2lyY2xlO1xuXHRcdCAgcGFkZGluZy1sZWZ0OiBweFRvUmVtKCRwZS1wYWRkaW5nLWxlZnQtbGlzdC1wcmltYXJ5KTtcblx0XHRcdHVsIHtcblx0XHRcdCAgbGlzdC1zdHlsZS10eXBlOiBzcXVhcmU7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59XG5cbi5wZS1saXN0LS11bnN0eWxlZCB7XG4gIFx0bGlzdC1zdHlsZTogbm9uZTtcblx0cGFkZGluZy1sZWZ0OiAwO1xuXHR1bCB7XG5cdFx0cGFkZGluZy1sZWZ0OiBweFRvUmVtKCRwZS1wYWRkaW5nLWxlZnQtbGlzdC1wcmltYXJ5KTtcblx0fVxufVxuXG4vLyBIZWFkaW5nc1xuXG4ucGUtaGVhZGluZy1sZXZlbDEge1xuXHRAZXh0ZW5kIC5wZS1wYWdlLXRpdGxlLS1zbWFsbDtcblx0bWFyZ2luLWJvdHRvbTogNnB4O1xufVxuXG4ucGUtaGVhZGluZy1sZXZlbDIge1xuXHRAZXh0ZW5kIC5wZS10aXRsZS0tbGFyZ2U7XG5cdG1hcmdpbi1ib3R0b206IDZweDtcbn1cblxuLnBlLWhlYWRpbmctbGV2ZWwzIHtcblx0QGV4dGVuZCAucGUtdGl0bGU7XG5cdGZvbnQtd2VpZ2h0OiBib2xkO1xuXHRtYXJnaW4tYm90dG9tOiA2cHg7XG59XG5cbi5wZS1oZWFkaW5nLWxldmVsNCB7XG5cdEBleHRlbmQgLnBlLXRpdGxlO1xuXHRtYXJnaW4tYm90dG9tOiA2cHg7XG59XG5cbi5wZS1oZWFkaW5nLWxldmVsNSB7XG5cdEBleHRlbmQgLnBlLXRpdGxlLS1zbWFsbDtcblx0bWFyZ2luLWJvdHRvbTogNnB4O1xufVxuXG4ucGUtaGVhZGluZy1sZXZlbDYge1xuXHRAZXh0ZW5kIC5wZS1jb3B5LS1sYXJnZTtcblx0bWFyZ2luLWJvdHRvbTogNnB4O1xufVxuXG4qICsgW2NsYXNzXj1cInBlLWhlYWRpbmctbGV2ZWxcIl0ge1xuXHRtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4vLyBDb2RlXG5cbi5wZS1jb2RlIHtcblx0Zm9udC1mYW1pbHk6ICRwZS1mb250LWZhbWlseS1jb2RlO1xuXHRjb2xvcjogJHBlLWNvbG9yLXByZTtcblx0QGluY2x1ZGUgZm9udC1zaXplKCRwZS1mb250LXNpemUtcHJlLCAkcGUtbGluZS1oZWlnaHQtcHJlKTtcblx0YmFja2dyb3VuZDogJHBlLWJnLXByZTtcblx0cGFkZGluZzogJHBlLXBhZGRpbmctcHJlO1xufVxuXG4ucGUtY29kZS1pbmxpbmUsXG4ucGUta2JkIHtcblx0Zm9udC1mYW1pbHk6ICRwZS1mb250LWZhbWlseS1jb2RlO1xuXHRiYWNrZ3JvdW5kOiAkcGUtYmctY29kZTtcblx0cGFkZGluZzogJHBlLXBhZGRpbmctY29kZTtcbn1cbiIsIi8vIGNvbW1vbmx5IHVzZWQgZnVuY3Rpb25zXG5AZnVuY3Rpb24gcHhUb1JlbSgkcHgsICRjb21wYXJhdG9yOiRwZS1mb250LXNpemUtYmFzZSkge1xuICBAcmV0dXJuICN7JHB4LyRjb21wYXJhdG9yfXJlbTtcbn1cbiIsIi8vIENvbW1vbmx5IHVzZWQgdmFyaWFibGVzXG4vLyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBhbGwgdmFyaWFibGVzIGhlcmUgc2hvdWxkIGNhcnJ5ICFkZWZhdWx0XG4vLyB0byBmYWNpbGl0YXRlIHVzaW5nIHRoZW0gZnVydGhlciBkb3duc3RyZWFtIGFuZCBvdmVycmlkaW5nIGlmIG5lY2Vzc2FyeVxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQmFzZSB0eXBvZ3JhcGh5IHZhcmlhYmxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuQGltcG9ydCAnLi4vZWxlbWVudHMvY29sb3IvdmFyaWFibGVzJztcblxuJHBlLWZvbnQtZmFtaWx5LXNhbnM6XHRcdFx0J09wZW4gU2FucycsIENhbGlicmksIFRhaG9tYSwgc2Fucy1zZXJpZjtcbiRwZS1mb250LWZhbWlseS1tb25vOlx0XHRcdE1vbmFjbywgJ0x1Y2lkYSBDb25zb2xlJywgbW9ub3NwYWNlO1xuXG4kcGUtZm9udC1mYW1pbHktYmFzZTpcdFx0XHQkcGUtZm9udC1mYW1pbHktc2FucyAhZGVmYXVsdDtcblxuJHBlLWZvbnQtc2l6ZS1iYXNlOlx0XHRcdFx0MTRweCAhZGVmYXVsdDtcbiRwZS1saW5lLWhlaWdodC1iYXNlOlx0XHRcdDE4cHggIWRlZmF1bHQ7XG5cbiRwZS1mb250LWNvbG9yLWJhc2U6XHRcdFx0JHBlLWNvbG9yLWNoYXJjb2FsICFkZWZhdWx0O1xuJHBlLWZvbnQtY29sb3Itc2Vjb25kYXJ5Olx0XHQkcGUtY29sb3ItbWVkaXVtLWdyYXkgIWRlZmF1bHQ7XG5cbiRwZS1mb250LWNvbG9yLWJhc2UtaW52ZXJzZTpcdFx0JHBlLWNvbG9yLXdoaXRlO1xuJHBlLWZvbnQtY29sb3Itc2Vjb25kYXJ5LWludmVyc2U6XHQkcGUtY29sb3Itd2hpdGUtZ3JheTtcblxuLy8gJHBlLWZvbnRzLXBhdGg6ICcvZm9udHMvJyAhZGVmYXVsdDtcbiRwZS1mb250cy1wYXRoOiAnaHR0cHM6Ly91bnBrZy5jb20vQHBlYXJzb24tY29tcG9uZW50cy9lbGVtZW50cy1zZGtAMS42LjEvYnVpbGQvZm9udHMvJyAhZGVmYXVsdDtcblxuJHBlLWltYWdlcy1wYXRoOiAnL2ltYWdlcy8nOyIsIi8vIGNvbW1vbmx5IHVzZWQgbWl4aW5zXG5cbkBtaXhpbiBjbGVhcmZpeCgpIHtcbiAgJjo6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgZGlzcGxheTogdGFibGU7XG4gICAgY2xlYXI6IGJvdGg7XG4gIH1cbn07XG5cbi8vIGZvbnQtc2l6ZSBtaXhpbiByZXR1cm5zIGZvbnQtc2l6ZSwgbGluZS1oZWlnaHQgYW5kIG1hcmdpbi1ib3R0b20gaWYgaW5jbHVkZWRcbkBtaXhpbiBmb250LXNpemUoJGZvbnQtc2l6ZTokcGUtZm9udC1zaXplLWJhc2UsICRsaW5lLWhlaWdodDokcGUtbGluZS1oZWlnaHQtYmFzZSwgJG1hcmdpbi1ib3R0b206ZmFsc2Upe1xuXHRmb250LXNpemU6IHB4VG9SZW0oJGZvbnQtc2l6ZSk7XG5cdGxpbmUtaGVpZ2h0OiBweFRvUmVtKCRsaW5lLWhlaWdodCk7XG5cdEBpZiAkbWFyZ2luLWJvdHRvbSAhPSBmYWxzZSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogcHhUb1JlbSgkbWFyZ2luLWJvdHRvbSk7XG5cdH1cbn1cblxuLy8gZm9jdXMgc3R5bGVzXG5AbWl4aW4gZm9jdXNPdXRsaW5lIHtcblx0Ym94LXNoYWRvdzpub25lO1xuXHRvdXRsaW5lOiAycHggc29saWQgJHBlLWZvY3VzLWNvbG9yO1xuXHRvdXRsaW5lLW9mZnNldDogNHB4O1xufVxuQG1peGluIGZvY3VzUHNldWRvT3V0bGluZSgkcmFkaXVzOiA0cHgsICR3aWR0aE9mZnNldDogOHB4LCAkaGVpZ2h0T2Zmc2V0OiA4cHgsICR0b3A6IC02cHgsICRsZWZ0OiAtNnB4KSB7XG4gICAgICAgICY6YWZ0ZXIge1xuICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICRwZS1mb2N1cy1jb2xvcjtcbiAgICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiAkcmFkaXVzO1xuICAgICAgICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAjeyR3aWR0aE9mZnNldH0pO1xuICAgICAgICAgIGhlaWdodDogY2FsYygxMDAlICsgI3skaGVpZ2h0T2Zmc2V0fSk7XG4gICAgICAgICAgdG9wOiAkdG9wO1xuICAgICAgICAgIGxlZnQ6ICRsZWZ0O1xuICAgICAgICAgIHotaW5kZXg6IDE7XG4gICAgICAgIH1cbn0iLCIvLyBDb2xvcnNcblxuLy8gUHJpbWFyeSBQYWxldHRlXG4kcGUtY29sb3ItZGlnaXRhbC1wZWFyc29uLWJsdWU6ICMwNDdBOUM7XG4kcGUtY29sb3ItaW5rLWJsdWU6ICMwMDVBNzA7XG4kcGUtY29sb3Itd2hpdGU6ICNGRkZGRkY7XG4kcGUtY29sb3Itd2hpdGUtZ3JheTogI0Y1RjVGNTtcbiRwZS1jb2xvci1uZXV0cmFsLWZpdmU6ICNFOUU5RTk7XG5cbi8vIFNlY29uZGFyeSBQYWxldHRlXG4kcGUtY29sb3Itc3Vuc2hpbmUteWVsbG93OiAjRkZCODFDO1xuJHBlLWNvbG9yLXN1bmZsb3dlci15ZWxsb3c6ICNGRjlBMTk7XG4kcGUtY29sb3ItZGlnaXRhbC1pY2UtYmx1ZTogI0RBRjBFRDtcbiRwZS1jb2xvci1kaWdpdGFsLW1hcmluZS10dXJxdW9pc2U6ICMxOUE2QTQ7XG4kcGUtY29sb3ItYnJhY2tpc2gtdHVycXVvaXNlOiAjMTc5NTk5O1xuXG4vLyBOZXV0cmFsIFBhbGV0dGVcbiRwZS1jb2xvci1jaGFyY29hbDogIzI1MjUyNTtcbiRwZS1jb2xvci1ncmFwaGl0ZTogIzUwNTc1OTtcbiRwZS1jb2xvci1tZWRpdW0tZ3JheTogIzZBNzA3MDtcbiRwZS1jb2xvci1jb25jcmV0ZTogI0M3QzdDNztcbiRwZS1jb2xvci1hbHRvOiAjRDlEOUQ5O1xuJHBlLWNvbG9yLW1vb25saWdodDogI0U5RTlFOTtcblxuLy8gQ29uZGl0aW9uYWwgUGFsZXR0ZVxuJHBlLWNvbG9yLXN0cmF3YmVycnktcmVkOiAjREIwMDIwO1xuJHBlLWNvbG9yLWRpZ2l0YWwtZ3Jhc3MtZ3JlZW46ICMwMzgyMzg7XG4kcGUtY29sb3ItaG90LXBpbms6ICNEQTA0NzQ7XG5cblxuLy9Db2xvcnMgUmVtYXBcblxuLy9QcmltYXJ5IFBhbGV0dGVcbiRwcmltYXJ5OiAkcGUtY29sb3ItZGlnaXRhbC1wZWFyc29uLWJsdWU7XG4kcHJpbWFyeS10d286ICRwZS1jb2xvci1pbmstYmx1ZTtcbiRwcmltYXJ5LXRocmVlOiAkcGUtY29sb3Itd2hpdGU7XG4kcHJpbWFyeS1mb3VyOiAkcGUtY29sb3Itd2hpdGUtZ3JheTtcblxuLy9TZWNvbmRhcnkgUGFsZXR0ZVxuJHNlY29uZGFyeTogJHBlLWNvbG9yLXN1bnNoaW5lLXllbGxvdztcbiRzZWNvbmRhcnktdHdvOiAkcGUtY29sb3Itc3VuZmxvd2VyLXllbGxvdztcbiRzZWNvbmRhcnktdGhyZWU6ICRwZS1jb2xvci1kaWdpdGFsLWljZS1ibHVlO1xuJHNlY29uZGFyeS1mb3VyOiAkcGUtY29sb3ItZGlnaXRhbC1tYXJpbmUtdHVycXVvaXNlO1xuJHNlY29uZGFyeS1maXZlOiAkcGUtY29sb3ItYnJhY2tpc2gtdHVycXVvaXNlO1xuXG4vLyBOZXV0cmFsIFBhbGV0dGVcbiRuZXV0cmFsOiAkcGUtY29sb3ItY29uY3JldGU7XG4kbmV1dHJhbC10d286ICRwZS1jb2xvci1jaGFyY29hbDtcbiRuZXV0cmFsLXRocmVlOiAkcGUtY29sb3ItbWVkaXVtLWdyYXk7XG4kbmV1dHJhbC1mb3VyOiAkcGUtY29sb3ItYWx0bztcbiRuZXV0cmFsLWZpdmU6ICRwZS1jb2xvci1tb29ubGlnaHQ7XG4gXG4vLyBDb25kaXRpb25hbCBQYWxldHRlXG4kY29uZGl0aW9uYWw6ICRwZS1jb2xvci1zdHJhd2JlcnJ5LXJlZDtcbiRjb25kaXRpb25hbC10d286ICRwZS1jb2xvci1kaWdpdGFsLWdyYXNzLWdyZWVuO1xuJGNvbmRpdGlvbmFsLXRocmVlOiAkcGUtY29sb3ItaG90LXBpbms7XG5cbi8vIEZvY3VzXG4kcGUtZm9jdXMtY29sb3I6ICMwQjczREE7IiwiLy8gVHlwZVxuLy8gYmFzZSBsaW5lLWhlaWdodCwgZm9udCBzaXplIGFuZCBmb250LWZhbWlseSBhcmUgZGVmaW5lZCBpbiB2YXJpYWJsZXNcbi8vIHRvIHN1cHBvcnQgdXNpbmcgRWxlbWVudHMgd2l0aG91dCBjYWxsaW5nIGluIFR5cG9ncmFwaHlcblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFVJIGFuZCBib2R5IGNvcHlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4kcGUtbGluZS1oZWlnaHQtY29weTpcdFx0XHRcdDIycHggIWRlZmF1bHQ7XG5cbiRwZS1mb250LXNpemUtc21hbGw6XHRcdFx0XHQxMnB4ICFkZWZhdWx0O1xuJHBlLWxpbmUtaGVpZ2h0LXNtYWxsOlx0XHRcdFx0MTZweCAhZGVmYXVsdDtcbiRwZS1saW5lLWhlaWdodC1jb3B5LXNtYWxsOlx0XHRcdDIwcHggIWRlZmF1bHQ7XG5cbiRwZS1mb250LXNpemUtbGFyZ2U6XHRcdFx0XHQxNnB4ICFkZWZhdWx0O1xuJHBlLWxpbmUtaGVpZ2h0LWxhcmdlOlx0XHRcdFx0MjBweCAhZGVmYXVsdDtcbiRwZS1saW5lLWhlaWdodC1jb3B5LWxhcmdlOlx0XHRcdDI0cHggIWRlZmF1bHQ7XG5cbiRwZS1mb250LXNpemUtbGVhZDpcdFx0XHRcdFx0MjBweCAhZGVmYXVsdDtcbiRwZS1saW5lLWhlaWdodC1sZWFkOlx0XHRcdFx0MjhweCAhZGVmYXVsdDtcblxuJHBlLWxhYmVsLWJvbGQ6IDYwMCAhZGVmYXVsdDtcblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gUGFnZSBoZWFkZXJzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJHBlLWZvbnQtc2l6ZS1wYWdlLXRpdGxlOlx0XHRcdDM4cHggIWRlZmF1bHQ7XG4kcGUtbGluZS1oZWlnaHQtcGFnZS10aXRsZTpcdFx0XHQ1MnB4ICFkZWZhdWx0O1xuXG4kcGUtZm9udC1zaXplLXBhZ2UtdGl0bGUtc21hbGw6XHRcdDI4cHggIWRlZmF1bHQ7XG4kcGUtbGluZS1oZWlnaHQtcGFnZS10aXRsZS1zbWFsbDpcdDM4cHggIWRlZmF1bHQ7XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIFVJIHNlY3Rpb24gaGVhZGVyc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRwZS1mb250LXNpemUtc2N0bi10aXRsZTpcdFx0XHQyMHB4ICFkZWZhdWx0O1xuJHBlLWxpbmUtaGVpZ2h0LXNjdG4tdGl0bGU6XHRcdFx0MjZweCAhZGVmYXVsdDtcblxuJHBlLWZvbnQtc2l6ZS1zY3RuLXRpdGxlLXNtYWxsOlx0XHQxOHB4ICFkZWZhdWx0O1xuJHBlLWxpbmUtaGVpZ2h0LXNjdG4tdGl0bGUtc21hbGw6XHQyMnB4ICFkZWZhdWx0O1xuXG4kcGUtZm9udC1zaXplLXNjdG4tdGl0bGUtbGFyZ2U6XHRcdDI0cHggIWRlZmF1bHQ7XG4kcGUtbGluZS1oZWlnaHQtc2N0bi10aXRsZS1sYXJnZTpcdDI4cHggIWRlZmF1bHQ7XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENvbnRlbnQgaGVhZGVyc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ29kZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRwZS1mb250LWZhbWlseS1jb2RlOlx0XHRcdFx0JHBlLWZvbnQtZmFtaWx5LW1vbm87XG5cbiRwZS1iZy1jb2RlOlx0XHRcdFx0XHRcdCRwZS1jb2xvci1tb29ubGlnaHQ7XG4kcGUtcGFkZGluZy1jb2RlOlx0XHRcdFx0XHQwIDRweDtcblxuJHBlLWJnLXByZTpcdFx0XHRcdFx0XHRcdCRwZS1jb2xvci1pbmstYmx1ZTtcbiRwZS1wYWRkaW5nLXByZTpcdFx0XHRcdFx0MzBweCA1MHB4O1xuJHBlLWNvbG9yLXByZTpcdFx0XHRcdFx0XHQkcGUtY29sb3Itd2hpdGUtZ3JheTtcbiRwZS1mb250LXNpemUtcHJlOlx0XHRcdFx0XHQxNHB4O1xuJHBlLWxpbmUtaGVpZ2h0LXByZTpcdFx0XHRcdDIwcHg7XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIExpc3RzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJHBlLW1hcmdpbi1saXN0Olx0XHRcdFx0XHQxMnB4IDA7XG4kcGUtcGFkZGluZy1sZWZ0LWxpc3QtcHJpbWFyeTpcdFx0MjZweDtcbiRwZS1wYWRkaW5nLWxlZnQtbGlzdC1uZXN0ZWQ6XHRcdDIwcHg7XG4kcGUtc3BhY2UtYmV0d2Vlbi1saXN0LWl0ZW1zOlx0XHQ2cHg7XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIExpbmtzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuJHBlLWNvbG9yLWxpbms6XHRcdFx0XHRcdFx0JHBlLWNvbG9yLWRpZ2l0YWwtcGVhcnNvbi1ibHVlO1xuJHBlLWNvbG9yLWxpbmstaG92ZXI6XHRcdFx0XHQkcGUtY29sb3ItaW5rLWJsdWU7XG5cblxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIElubGluZSBFbGVtZW50c1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiRwZS10ZXh0LW1hcmstYmc6XHRcdFx0XHRcdCRwZS1jb2xvci1zdW5zaGluZS15ZWxsb3c7XG4iLCIvLyBjb250YWlucyBhbGwgdGhlIGdsb2JhbCBodG1sIHRhZ3NcblxuLy8gaW1wb3J0IHR5cG9ncmFwaHkgdmFyaWFibGVzIGhlcmVcbkBpbXBvcnQgJy4uL2VsZW1lbnRzL3R5cG9ncmFwaHkvdmFyaWFibGVzJztcblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogcHhUb1JlbSgkcGUtZm9udC1zaXplLWJhc2UsIDE2cHgpO1xufVxuXG5ib2R5IHtcbiAgZm9udC1mYW1pbHk6ICRwZS1mb250LWZhbWlseS1zYW5zO1xuICBjb2xvcjogJHBlLWZvbnQtY29sb3ItYmFzZTtcbn1cblxuLy8gUmVtb3ZlIHRvcCBtYXJnaW5zIGZyb20gaGVhZGluZ3NcbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi8vIFNldCBoZWFkaW5nIGZvbGxvd2luZyBhbiBsZXZlbCAxIGhlYWRpbmcgYSB0b3AgbWFyZ2luIG9mIDQwcHhcbmgxIHtcblx0QGV4dGVuZCAucGUtaGVhZGluZy1sZXZlbDE7XG59XG5cbmgyIHtcblx0QGV4dGVuZCAucGUtaGVhZGluZy1sZXZlbDI7XG59XG5cbmgzIHtcblx0QGV4dGVuZCAucGUtaGVhZGluZy1sZXZlbDM7XG59XG5cbmg0IHtcblx0QGV4dGVuZCAucGUtaGVhZGluZy1sZXZlbDQ7XG59XG5cbmg1IHtcblx0QGV4dGVuZCAucGUtaGVhZGluZy1sZXZlbDU7XG59XG5cbmg2IHtcblx0QGV4dGVuZCAucGUtaGVhZGluZy1sZXZlbDY7XG59XG5cbi8vIGNvbnRlbnQgc3BhY2luZ3NcbiogKyBoMSxcbiogKyBoMixcbiogKyBoMyxcbiogKyBoNCxcbiogKyBoNSxcbiogKyBoNiB7XG5cdG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbmgxICsgaDIge1xuXHRtYXJnaW4tdG9wOiA0MHB4O1xufVxuXG5oMiArIGgzLFxuaDMgKyBoNCxcbmg0ICsgaDUsXG5oNSArIGg2IHtcblx0bWFyZ2luLXRvcDogNnB4O1xufVxuXG5oZWFkZXIge1xuXHRtYXJnaW4tYm90dG9tOiAyMHB4O1xuXG5cdGgxICsgLnN1YnRpdGxlIHtcblx0XHRAZXh0ZW5kIC5wZS1oZWFkaW5nLWxldmVsMjtcblx0XHRtYXJnaW4tdG9wOiAzNHB4O1xuXHR9XG5cdGgyICsgLnN1YnRpdGxlIHtcblx0XHRAZXh0ZW5kIC5wZS1oZWFkaW5nLWxldmVsMztcblx0fVxuXHRoMyArIC5zdWJ0aXRsZSB7XG5cdFx0QGV4dGVuZCAucGUtaGVhZGluZy1sZXZlbDQ7XG5cdH1cblx0aDQgKyAuc3VidGl0bGUge1xuXHRcdEBleHRlbmQgLnBlLWhlYWRpbmctbGV2ZWw1O1xuXHR9XG5cdGg1ICsgLnN1YnRpdGxlIHtcblx0XHRAZXh0ZW5kIC5wZS1oZWFkaW5nLWxldmVsNjtcblx0fVxufVxuXG4vLyBzbWFsbCB0YWdzIHdpdGhpbiBoZWFkaW5nc1xuLy9cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgc21hbGwge1xuICAgIC8vZm9udC1zaXplOiAkcGUtdGV4dC1oZWFkaW5nLXNtYWxsLWZvbnQtc2l6ZTtcbiAgICAvL2NvbG9yOiAkcGUtdGV4dC1oZWFkaW5nLXNtYWxsLWNvbG9yO1xuICB9XG59XG5cblxuYXNpZGUge1xuICAvL21hcmdpbi1ib3R0b206ICRwZS1hc2lkZS1tYXJnaW47XG4gIC8vcGFkZGluZzogJHBlLWFzaWRlLXBhZGRpbmc7XG4gIC8vYmFja2dyb3VuZDogJHBlLWFzaWRlLWJnO1xuICAvL2JvcmRlci1sZWZ0OiAkcGUtYXNpZGUtYm9yZGVyLWxlZnQ7XG5cbiAgaDEge1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgfVxuXG4gIGgyIHtcbiAgICBmb250LXNpemU6IDEuMXJlbTtcbiAgfVxuXG4gIGgzIHtcbiAgICBmb250LXNpemU6IDFyZW07XG4gIH1cblxuICBoNCxcbiAgaDUsXG4gIGg2IHtcbiAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgfVxufVxuXG4vLyB0byBiZSByZXBsYWNlZFxudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBtYXJnaW4tYm90dG9tOiAzNXB4O1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuXG4gIHRoLFxuICB0ZCB7XG4gICAgcGFkZGluZzogOHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQyODU3MTQzO1xuICAgIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gICAgLy9ib3JkZXItdG9wOiAxcHggc29saWQgJHBlLXRhYmxlLWJvcmRlci1jb2xvcjtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICB9XG5cbiAgdGhlYWQgdGgge1xuICAgIHZlcnRpY2FsLWFsaWduOiBib3R0b207XG4gICAgLy9ib3JkZXItYm90dG9tOiAycHggc29saWQgJHBlLXRhYmxlLWJvcmRlci1jb2xvcjtcbiAgICBib3JkZXItdG9wOiAwcHggbm9uZTtcbiAgfVxuXG4gIHRib2R5ICsgdGJvZHkge1xuICAgIC8vYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICRwZS10YWJsZS1ib3JkZXItY29sb3I7XG4gIH1cbn1cblxuLy8gTGlua3MgKHRha2VuIGZyb20gX3R5cGUuc2Nzcylcbi8vXG5cbmEge1xuICBjb2xvcjogJHBlLWNvbG9yLWRpZ2l0YWwtcGVhcnNvbi1ibHVlO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcblxuICAmOmhvdmVyLFxuICAmOmFjdGl2ZSxcbiAgJi5hY3RpdmUge1xuICAgIGNvbG9yOiAkcGUtY29sb3ItaW5rLWJsdWU7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICB9XG4gIFxuICAmOmZvY3VzIHtcbiAgICBjb2xvcjogJHBlLWNvbG9yLWluay1ibHVlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0QGluY2x1ZGUgZm9jdXNPdXRsaW5lO1xuICB9XG59XG5cbi8vIEJvZHkgY29weVxuLy9cblxucCB7XG5cdEBleHRlbmQgLnBlLXBhcmFncmFwaDtcbn1cblxuLy8gSW5saW5lIHRleHRcbi8vXG5cbmFiYnIsXG5hYmJyW3RpdGxlXSB7XG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuaW5zIHtcbiAgJjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcrJztcbiAgfVxuXG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcrJztcbiAgfVxufVxuXG5tYXJrIHtcbiAgYmFja2dyb3VuZDogJHBlLXRleHQtbWFyay1iZztcbn1cblxucyB7XG4gIC8vY29sb3I6ICRwZS10ZXh0LXN0cmlrZXRocm91Z2gtY29sb3I7XG59XG5cbnNtYWxsIHtcblx0QGluY2x1ZGUgZm9udC1zaXplKCRwZS1mb250LXNpemUtc21hbGwsICRwZS1saW5lLWhlaWdodC1zbWFsbCk7XG59XG5cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogOTAlO1xufVxuXG5zdWIge1xuICB0b3A6IDAuMnJlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtMC4ycmVtO1xufVxuXG4vLyBDb2RlXG4vL1xuXG5wcmUge1xuXHRtYXgtd2lkdGg6IDEwMCU7XG5cdG92ZXJmbG93LXg6IGF1dG87XG59XG5cbnByZSxcbmNvZGUsXG5rYmQge1xuICBmb250LWZhbWlseTogJHBlLWZvbnQtZmFtaWx5LW1vbm87XG59XG5cbjpmb2N1cyB7XG5cdEBpbmNsdWRlIGZvY3VzT3V0bGluZTtcbn0iLCIkc2Vjb25kYXJ5LWZvdXI6ICRwZS1jb2xvci1kaWdpdGFsLW1hcmluZS10dXJxdW9pc2U7XG4kbmV1dHJhbDogJHBlLWNvbG9yLWNvbmNyZXRlO1xuJG5ldXRyYWwtdHdvOiAkcGUtY29sb3ItY2hhcmNvYWw7XG4kbmV1dHJhbC10aHJlZTogJHBlLWNvbG9yLW1lZGl1bS1ncmF5O1xuJG5ldXRyYWwtZm91cjogJHBlLWNvbG9yLWFsdG87XG4kcHJpbWFyeS10d286ICRwZS1jb2xvci1pbmstYmx1ZTtcblxuLnRhYmJlZC1uYXZpZ2F0aW9uIHtcbiAgcG9zaXRpb246cmVsYXRpdmU7XG5cbiAgLnRhYi1uYW1lIHtcbiAgICBiYWNrZ3JvdW5kOm5vbmU7XG4gICAgYm9yZGVyOjA7XG4gIH1cblxuICB1bC50YWJzIHtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcblxuICAgID4gbGkge1xuICAgICAgbGlzdC1zdHlsZS10eXBlOiBub25lO1xuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgfVxuXG4gIGxpLnRhYi10aXRsZSB7XG4gICAgJi5hY3RpdmUge1xuICAgICAgLnRhYi1uYW1lIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBjb2xvcjogJG5ldXRyYWwtdHdvO1xuICAgICAgfVxuICAgIH1cblxuICAgICY6aG92ZXI6bm90KC5hY3RpdmUpLCAmOmhvdmVyOm5vdChsaSkge1xuICAgICAgLnRhYi1uYW1lIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogM3B4IHNvbGlkICRuZXV0cmFsO1xuICAgICAgICBjb2xvcjogJG5ldXRyYWwtdHdvO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC50YWItbmFtZSB7XG4gICAgcGFkZGluZzogLjVlbSAwO1xuICAgIG1hcmdpbjogLjVlbSAxZW07XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb2xvcjokbmV1dHJhbC10aHJlZTtcbiAgfVxuXG4gIGRpdiB7XG4gICAgcGFkZGluZzogLjVlbSAwO1xuICAgIG1hcmdpbjogLjVlbSAxZW07XG5cbiAgICBidXR0b24ge1xuICAgICAgY29sb3I6ICRuZXV0cmFsLXRocmVlO1xuICAgIH1cbiAgfVxuXG4gICYuZGFyayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHByaW1hcnktdHdvO1xuXG4gICAudGFiLW5hbWUge1xuICAgICAgY29sb3I6ICRuZXV0cmFsLWZvdXI7XG4gICAgfVxuXG4gICAgbGkudGFiLXRpdGxlIHtcbiAgICAgICYuYWN0aXZlIHtcbiAgICAgICAgLnRhYi1uYW1lIHtcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgJjpob3Zlcjpub3QoLmFjdGl2ZSkge1xuICAgICAgICAudGFiLW5hbWUge1xuICAgICAgICAgIGJvcmRlci1ib3R0b206IDNweCBzb2xpZCAkbmV1dHJhbC1mb3VyO1xuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGRpdiB7XG4gICAgICBidXR0b24ge1xuICAgICAgICBjb2xvcjogJG5ldXRyYWwtZm91cjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgLnRhYi1zbGlkZXIge1xuICAgIGhlaWdodDozcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHNlY29uZGFyeS1mb3VyO1xuICAgIHBvc2l0aW9uOmFic29sdXRlO1xuICAgIHBhZGRpbmc6MDtcbiAgICBtYXJnaW46IC41ZW0gMWVtO1xuICAgIGJvdHRvbTowO1xuICB9XG59XG4iXX0= */
